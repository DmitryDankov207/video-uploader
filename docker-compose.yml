version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres:14
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - env/.env.postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -e \"SHOW DATABASES;\"" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq3:
    container_name: rabbitmq3
    image: rabbitmq:3-management-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 3

  web:
    container_name: web
    restart: always
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    env_file:
      - env/.env
    depends_on:
      - postgres

  celery-worker:
    container_name: celery-worker
    restart: always
    build: .
    command: celery -A config worker -Q video-upload --hostname video-upload -l INFO
    env_file:
      - env/.env
    depends_on:
      - postgres
      - rabbitmq3
